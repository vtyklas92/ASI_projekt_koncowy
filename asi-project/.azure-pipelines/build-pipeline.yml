trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: 'pokedex-asi-acr'
  containerRegistry: 'pokedexasi.azurecr.io'
  imageName: 'pokedex-app'
  resourceGroup: 'asi'
  containerName: 'pokedex-container-asi'
  dnsNameLabel: 'pokedex-app-suml-pw-kk-ap'

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: Build
        displayName: 'Build and Push to ACR'
        steps:
          - task: Docker@2
            displayName: 'Login to Registry'
            inputs:
              command: login
              containerRegistry: $(dockerRegistryServiceConnection)

          - task: Docker@2
            displayName: 'Build and Push Image'
            inputs:
              command: buildAndPush
              repository: $(imageName)
              dockerfile: 'Dockerfile'
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(Build.BuildId)
                latest
  - stage: Deploy
    displayName: 'Deploy to Azure Container Instance'
    dependsOn: BuildAndPush
    condition: succeeded()
    jobs:
      - job: 'DeployContainer'
        steps:
          - task: AzureCLI@2
            displayName: 'Deploy Azure Container Instance'
            inputs:
              azureSubscription: 'AzureResourceManagerConnection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az container create \
                  --resource-group $(resourceGroup) \
                  --name $(containerName) \
                  --image $(containerRegistry)/$(imageName):$(Build.BuildId) \
                  --os-type Linux \
                  --cpu 1 \
                  --memory 2 \
                  --ip-address Public \
                  --ports 8501 \
                  --dns-name-label $(dnsNameLabel) \
                  --registry-login-server $(containerRegistry) \
                  --registry-username '$(ACR_USERNAME)' \
                  --registry-password '$(ACR_PASSWORD)' \
                  --environment-variables AZURE_STORAGE_CONNECTION_STRING='$(AzureStorageConnectionString)'
